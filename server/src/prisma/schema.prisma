// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  balance   Float
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id         Int         @id @default(autoincrement())
  userId     Int
  user       User        @relation(fields: [userId], references: [id])
  orderItems OrderItem[]
  total      Float
  status     String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
}

model Product {
  id              Int         @id @default(autoincrement())
  name            String
  price           Float
  quantityInStock Int         @default(0)
  orderItems      OrderItem[] // Um produto pode estar em v√°rios pedidos
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id])
  productId Int
  product   Product  @relation(fields: [productId], references: [id])
  quantity  Int // Quantidade de cada produto no pedido
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
